// class Solution {
// public:
//     int minimumLength(string s) {
//         int size = s.size();
//         if (size < 3) return size;

//         while (true) {
//             bool found = false;
//             for (int i = 1; i < size - 1; ++i) {
//                 if (s[i - 1] == s[i] && s[i] == s[i + 1]) {
//                     s.erase(i - 1, 2); // Remove characters at i-1 and i
//                     size -= 2;
//                     found = true;
//                     break; 
//                 }
//             }
//             if (!found) break; 
//         }
//         return size;
//     }
// };

class Solution {
public:
    int minimumLength(string s) {
        int size = s.size();
        if (size < 3) return size;
        int count =0;

        unordered_map<char, int>result;
        for(char &ch:s){
            result[ch]++;
        }
        for(const auto& EvenOdd : result)
        {
            if(EvenOdd.second %2 == 0){
                count=count+2;
            }else{
                count++;
            }
        }
        return count;
    }
};
