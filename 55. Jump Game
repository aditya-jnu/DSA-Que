// class Solution {
// public:
//     bool canJump(vector<int>& nums) {
//         int size = nums.size();
//         int i = 0;

//         while (i < size) {
//             int temp = nums[i];
//             if (temp == 0 && i != size - 1) {
//                 return false;
//             }
//             i += temp;
//             if (i >= size - 1) {
//                 return true;
//             }
//         }
//         return false;
//     }
// };

class Solution {
public:
    bool canJump(vector<int>& nums) {
        int size = nums.size();
        int maxReach = 0;

        for (int i = 0; i < size; i++) {
            if (i > maxReach) {
                return false;
            }
            maxReach = max(maxReach, i + nums[i]);
            if (maxReach >= size - 1) {
                return true;
            }
        }
        return false;
    }
};

